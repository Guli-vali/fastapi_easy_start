---

- name: Add the PostgreSQL repository key to the apt trusted keys
  apt_key: url=https://www.postgresql.org/media/keys/ACCC4CF8.asc
           state=present

- name: Add the PostgreSQL repository to the apt sources list
  apt_repository: repo='deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main'
                  update_cache={{ update_apt_cache }}
                  state=present

- name: Ensure locale is available
  locale_gen: name=en_US.UTF-8

- name: Install PostgreSQL
  apt:
    update_cache: "{{ update_apt_cache }}"
    state: present
    name:
      - postgresql-14
      - postgresql-contrib
      - "{{ base_python_package }}-psycopg2"
  tags: packages

- name: Ensure the PostgreSQL service is running
  service:
    name: postgresql
    state: started
    enabled: yes
    # TODO: This is likely due to a bug in Ansible.
    # Remove this line in the future.
    # See https://github.com/ansible/ansible/issues/75005
    use: sysvinit

- name: Configure global settings.
  lineinfile:
    dest: "{{ postgresql_config_path }}/postgresql.conf"
    regexp: "^#?{{ item.option }}.+$"
    line: "{{ item.option }} = '{{ item.value }}'"
    state: "{{ item.state | default('present') }}"
    mode: 0644
  with_items: "{{ postgresql_global_config_options }}"
  notify: restart postgresql

- name: Configure host based authentication (if entries are configured).
  template:
    src: "pg_hba.conf.j2"
    dest: "{{ postgresql_config_path }}/pg_hba.conf"
    owner: "{{ postgresql_user }}"
    group: "{{ postgresql_group }}"
    mode: 0600
  notify: restart postgresql
  when: postgresql_hba_entries | length > 0

- name: Ensure database is created
  become: true
  become_user: postgres
  postgresql_db:
    name: "{{ db_name }}"
    encoding: UTF-8
    lc_collate: en_US.UTF-8
    lc_ctype: en_US.UTF-8
    template: template0
    state: present

- name: Ensure user has access to the database
  become: true
  become_user: postgres
  postgresql_user: db={{ db_name }}
                   name={{ db_user }}
                   password={{ db_password }}
                   encrypted=yes
                   priv=ALL
                   state=present
  environment:
    PGOPTIONS: "-c password_encryption=md5"

- name: Ensure user does not have unnecessary privileges
  become: true
  become_user: postgres
  postgresql_user: name={{ db_user }}
                   role_attr_flags=NOSUPERUSER,NOCREATEDB
                   state=present
